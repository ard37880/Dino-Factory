# Ruby/ The Ruby Bot
# Made by: Andrew Davis
# 01/25/2024
'''   
Any code not in use comment out like this so we can save it for reactivation per server
'''   

############# Imports ###############################################################
import discord
import requests
import nacl

from discord.ext import commands
from discord import FFmpegPCMAudio
from apikeys import discord_bot_token

############# Intendts #############################################################
intents = intents = discord.Intents(value=8)
intents.members = True
intents.messages = True
intents.guilds = True
intents.message_content = True

############ Trigger ###############################################################
client = commands.Bot(command_prefix="!", intents=intents)

# When Start up Bot
@client.event
async def on_ready():
    print("Dino Factory is ready for use!")
    print("-------------------------------------------------")

############ Commands #############################################################
@client.command()
async def hello(ctx):
    await ctx.send("Hello, you've reached Ruby. Nice to meet you!")

@client.command()
async def goodbye(ctx):
    await ctx.send("Goodbye, hope you have a great rest of your day!")

# Joins Voice Channel with Music
@client.command()
async def join(ctx):
    if ctx.author.voice:
        channel = ctx.author.voice.channel
        voice = await channel.connect()
        source = FFmpegPCMAudio('elevattor.mp3')
        player = voice.play(source)
    else:
        await ctx.send("Please join a voice channel to run this command.")

# Pauses Music while in Voice Channel
@client.command()
async def pause(ctx):
    voice = discord.utils.get(client.voice_clients,guild=ctx.guild)
    if voice.is_playing():
        voice.pause()
    else:
        await ctx.send("At the moment, there is no audio playing in the voice channel!")

# Restarts Music after Paused
@client.command()
async def resume(ctx):
     voice = discord.utils.get(client.voice_clients,guild=ctx.guild)
     if voice.is_paused():
         voice.resume()
     else:
         await ctx.send("At the moment, there isn't anything playing!")

# Leaves Voice Channel
@client.command()
async def leave(ctx):
    if ctx.voice_client:
        await ctx.voice_client.disconnect()
        await ctx.send("Dino Factory has left the voice chat")
    else:
        await ctx.send("Currently not in a voice channel")

############### Events ##############################################################
 
# Welcomes user to server in Welcome Channel
   
@client.event
async def on_member_join(member):
    channel = client.get_channel(1198457414207426642)
    await channel.send("Welcome {user_name} to {server_name}! Please read https://discord.com/channels/1004848935061434428/1198485354710311002 and we will see you around!")
  

# Sends alert to Logs Channel when someone left
  
@client.event
async def on_member_remove(member):
    channel = client.get_channel(1198457414207426642)
    await channel.send("Goodbye, thank you for stopping in!")






############# Bot Token ##############################################################
client.run(discord_bot_token)
############# END#####################################################################
